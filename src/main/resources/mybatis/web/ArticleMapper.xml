<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bootdo.web.dao.ArticleDao">
  <resultMap id="BaseResultMap" type="com.bootdo.web.entity.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="column_id" jdbcType="INTEGER" property="columnId" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bootdo.web.entity.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, column_id, view_count, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="delArticles">  
        DELETE FROM t_article WHERE FIND_IN_SET(id,#{ids})  
  </delete> 
  <insert id="insert" parameterType="com.bootdo.web.entity.Article">
    insert into t_article (id, title, column_id, view_count, 
      create_time, update_time, content
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{columnId,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bootdo.web.entity.Article">
    insert into t_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="columnId != null">
        column_id,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="columnId != null">
        #{columnId,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bootdo.web.entity.Article">
    update t_article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="columnId != null">
        column_id = #{columnId,jdbcType=VARCHAR},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bootdo.web.entity.Article">
    update t_article
    set title = #{title,jdbcType=VARCHAR},
      column_id = #{columnId,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bootdo.web.entity.Article">
    update t_article
    set title = #{title,jdbcType=VARCHAR},
      column_id = #{columnId,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getArticleList" resultType="Map">
  	SELECT
		id,
		title,
		column_id columnId,
		(
			SELECT
				NAME
			FROM
				t_column
			WHERE
				id = column_id
		) columnName,
		content,
		view_count viewCount,
		date_format(create_time,'%Y-%m-%d %H:%i') createTime
	FROM
		t_article
	where 1=1
	<if test="title!=null and title!=''">
		and title like CONCAT('%',#{title},'%')
	</if>
	<if test="columnId!=null and columnId!=''">
		and column_id = #{columnId}
	</if>
	<choose>
		<when test="sort != null and sort!= ''">
			order by ${sort} ${order}
		</when>
		<otherwise>
			order by create_time desc
		</otherwise>
	</choose>
	<if test="offset!=null and limit!=null">
		limit #{offset},#{limit}
	</if>
  </select>
  
  <select id="queryArticleCount" resultType="java.lang.Integer">
  	select 
  		count(0) 
  	from 
  		t_article 
  	where 1=1
  	<if test="title!=null and title!=''">
		and title like CONCAT('%',#{title},'%')
	</if>
	<if test="columnId!=null and columnId!=''">
		and column_id = #{columnId}
	</if>
  </select>
</mapper>